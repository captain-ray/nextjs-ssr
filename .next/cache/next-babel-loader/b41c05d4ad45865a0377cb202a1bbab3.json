{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Documents/workspace_2020_07/junior-to-senior-web-developer/next-ssr/pages/robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Home\")), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, props.robots.map(robot => __jsx(\"li\", {\n    key: robot.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, robot.name))));\n};\n\nRobots.getInitalProps = async function () {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["/Users/ray/Documents/workspace_2020_07/junior-to-senior-web-developer/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","getInitalProps","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IACnB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,IADX,CADH,CADL,CALJ,CADJ;AAeH,CAhBD;;AAkBAN,MAAM,CAACO,cAAP,GAAwB,kBAAkB;AACtC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AACHR,IAAAA,MAAM,EAAEO;AADL,GAAP;AAGH,CAND;;AASA,eAAeT,MAAf","sourcesContent":["import Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = (props) => {\n    return (\n        <div>\n            <h1>Robots</h1>\n            <Link href='/'>\n                <button>Home</button>\n            </Link>\n            <ul>\n                {props.robots.map(robot => (\n                    <li key={robot.id}>\n                        {robot.name}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nRobots.getInitalProps = async function () {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n    const data = await res.json();\n    return {\n        robots: data\n    }\n}\n\n\nexport default Robots;"]},"metadata":{},"sourceType":"module"}